=title Static code analysis for Python code - PEP8, FLAKE8, pytest
=timestamp 2019-09-21T07:30:01
=indexes pytest, flake8, pytest
=status show
=books python
=author szabgab
=archive 1
=comments_disqus_enable 0

=abstract start
=abstract end

Install

<code>
pip install pytest-flake8
</code>

Run

<code>
pytest --flake8 .
</code>


If you'd like to run the static analysis on the directory where you have the tests files, and if you want the test-run
to only include the flake8 tests then you need a way to exclude all the other tests. For this I can recommend you use a
fake marker. That is, using <hl>-m qqrq</hl> you tell pytest that only run the test-functions that have a marker "qqrq".
Hopefully none of your tests will use this marker and thus none of your tests will run.

Only the flake8 static code analysis.

<code>
pytest --flake8 -m qqrq .
</code>


Configure by including the following in the <hl>setup.cfg</hl> file in the root of your project.

<include file="examples/setup-with-flake8.cfg">


<h2>PEP8</h2>

Flake already includes PEP8, so the following is only needed if for some reason you cannot use flake8:

<code>
pip install pytest-pep8
</code>

<include file="examples/setup-with-pep8.cfg">


<h2>Cyclomtic complexity</h2>

<ul>
<li><a href="https://audiolion.github.io/python/2016/10/17/reducing-cyclomatic-complexity.html">Reducing cyclomatic complexity</a></li>
<li><a href="https://pypi.org/project/hfcca/">hfcca</a></li>
<li><a href="https://pypi.org/project/radon/">radon</a></li>
<li><a
href="https://adrianmejia.com/most-popular-algorithms-time-complexity-every-programmer-should-know-free-online-tutorial-course/">Algorithms</a></li>
</ul>


