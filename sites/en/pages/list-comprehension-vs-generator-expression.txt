=title List Comprehension vs Generator Expressions in Python
=timestamp 2015-06-26T09:00:01
=indexes (), []
=status show
=books python
=author szabgab
=archive 1
=comments_disqus_enable 1

=abstract start

A Generator Expression is doing basically the same thing as a List Comprehension
does, but the GE does it lazily. The difference is quite similar to the
difference between <a href="/range-vs-xrange-in-python">range and xrange</a>.

A List Comprehension, just like the plain <hl>range</hl> function, executes
immediately and returns a list.

A Generator Expression, just like <hl>xrange</hl> returns an object that
can be iterated over.

=abstract end

The comparision is not perfect though, because in an object returned by
the generator expression, we cannot access an element by index.

The difference between the two kinds of expressions is that the
List comprehension is enclosed in square brackets <hl>[]</hl>
while the Generator expression is enclosed in plain parentheses <hl>()</hl>.

<code lang="python">
l = [n*2 for n in range(1000)] # List comprehension
g = (n*2 for n in range(1000))  # Generator expression
</code>

<h2>Type</h2>

The types of the resulting values are <hl>list</hl> and <hl>generator</hl> respectively:

<code lang="python">
print(type(l))  # 'list'
print(type(g))  # 'generator'
</code>

<h2>Size in memory</h2>

The size of the objects is 9032 bytes (the list), and 80 bytes (the generator):

<code lang="python">
print(sys.getsizeof(l))  # 9032
print(sys.getsizeof(g))  # 80
</code>

<h2>Access by Index</h2>

We can access the elements of the <hl>list</hl>, but if we try to access the elements
of the <hl>generator</hl> we get a <hl>TypeError</hl>:

<code lang="python">
print(l[4])   # 8
print(g[4])   # TypeError: 'generator' object has no attribute '__getitem__'
</code>

<h2>Loop over</h2>

Finally, but most importantly, we can iterate over either of them:

<code lang="python">
for v in l:
    pass
for v in g:
    pass
</code>

<h2>The full example</h2>

<include file="examples/python/generator_expression.py">
