=title Exercise: Analyze Apache log file - count localhost
=timestamp 2015-10-20T11:20:01
=indexes exercises, projects
=status show
=books ruby, python, javascript, php
=author szabgab
=archive 1
=comments_disqus_enable 0

=abstract start

In this <a href="/exercises">exercise</a> we take a log file generated by a web server, and do some simple analysis on it.

=abstract end

The file looks like this:

<include file="examples/data/apache_access.log">

Every row is a request on a web server. Some are pages, some are images, some are JavaScript files.
That's not the important part now. Currently we are going to focus on the first field of every line
which is the IP address of the requester. We go with a simple exercise.

As you might know, every device uses the IP address 127.0.0.1 to refer to itself. So visitors arriving from
that IP address are based on the same machine.

The task is to write a scrip that will count how many requests came from 127.0.0.1 and how many from elsewhere?

<h2>Tools</h2>
<ul>
  <li><a href="https://perlmaven.com/beginner-perl-maven-open-file">Perl 5: open the file for reading or die</a></li>
  <li><a href="https://perlmaven.com/chomp">Perl 5: chomp remove trailing newlines</a></li>
  <li><a href="https://perlmaven.com/beginner-perl-maven-string-functions-index">Perl 5: index</a></li>
  <li><a href="https://perlmaven.com/beginner-perl-maven-substr">Perl 5: substr</a></li>
  <li><a href="/argv-the-command-line-arguments-in-ruby">Ruby: ARGV command line parameters</a>.</li>
  <li><a href="/open-file-and-read-content-in-ruby">Ruby: open a file for reading and iterate over it</a>.</li>
</ul>

<h2>Solutions</h2>
<ul>
   <li><a href="https://perlmaven.com/beginner-perl-maven-analyze-apache-log-file">Perl 5 - Analyze Apache log file - count localhost</a></li>
   <li><a href="/analyze-apache-log-file-count-localhost-in-ruby">Ruby - Analyze Apache log file - count localhost</a></li>
</ul>

