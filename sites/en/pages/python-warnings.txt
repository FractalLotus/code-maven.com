=title Python: capturing, hiding, and reporting warnings
=timestamp 2020-06-27T09:40:01
=indexes CodeMaven
=status show
=books python
=author szabgab
=archive 1
=comments_disqus_enable 0
=show_related 1

=abstract start

I am sure you have already seen <a href="https://docs.python.org/library/warnings.html">warnings</a> coming from some Python code.
I espcially encountered warnings about using deprecated features.

This always raises threww questions:

How can I hide the warnings?

How can I capture, collect, and report the warnings?

How can you create my own warnings?

=abstract end

<h2>Generate warnings</h2>

<include file="examples/python/warn.py">

<code>
before
warn.py:4: UserWarning: Some warning
  warnings.warn("Some warning")
after
</code>

<h2>Capture and hide or print warnings</h2>

<include file="examples/python/warn_capture.py">

<code>
before
-----
warn: Some warning
<class 'UserWarning'>
{message : UserWarning('Some warning'), category : 'UserWarning', filename : 'warn_capture.py', lineno : 4, line : None}
-----
warn: Other warning
<class 'UserWarning'>
{message : UserWarning('Other warning'), category : 'UserWarning', filename : 'warn_capture.py', lineno : 5, line : None}
-----
after
</code>

<h2>Log the warnings</h2>

<include file="examples/python/warn_to_logger.py">

<code>
2020-06-27 09:41:37,847 - INFO       - before
2020-06-27 09:41:37,848 - WARNING    - warn_to_logger.py:5: UserWarning: Some warning
  warnings.warn("Some warning")

2020-06-27 09:41:37,848 - INFO       - after
</code>

