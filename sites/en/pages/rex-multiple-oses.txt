=title Multiple OS-es using Rex - (R)?ex
=timestamp 2021-03-22T18:00:01
=indexes Rex
=tags screencast
=status show
=author 0
=archive 1
=comments_disqus_enable 0
=show_related 1

=abstract start

During this meeting <a href="https://www.linkedin.com/in/ferki/">Ferenc Erki</a>, the lead developer of <a href="https://www.rexify.org/">Rex</a>
helped us with various tasks using Rex.

We started where we left of last time when FErki gave us an <a href="/automation-with-rex">introduction to Rex</a>.

=abstract end

<screencast file="rex-2_1920x1080.mp4" youtube="RijvRBdLw5Y" />

<h2>Before the meeting</h2>

I've created a Rexfile to set up the environment as we had it when we finished the first session.
<ul>
   <li>Created a pair of private/public keys that will be used in these examples. Locally I saved them in <b>~/.ssh/rex</b>. I have manually uploaded the public key to Digital Ocean and call it Rex.</li>
   <li>Create A Droplet with Ubuntu 20.04 in New York 1.  Hostname code-maven-rex. This will me the management machine during the meeting.</li>
   <li>Also create 2 Droplets with Ubuntu 20.04 in New York 1 Hostname ubu-1 and ubu-2 using the Rex public key</li>
   <li>On the management server: Install Rex using apt-get, copy the .ssh/config file and copy the files we created in the <a href="/automation-with-rex">previous session</a></li>
   <li>Copy the private ssh key to ~/.ssh/ on code-maven-rex, the management machine.</li>
   <li>Run the Rex code on the management server to set up the web server on ubu-1</li>
</ul>

<include file="examples/rex/setup/Rexfile">

I had to update the config file manually based on the IP addresses generated by Digital Ocean.

<include file="examples/rex/setup/files/config">


<ul>
    <li><a href="https://www.rexify.org/get/index.html">Get Rex</a></li>
    <li><a href="https://metacpan.org/pod/Rex::Commands::File#template($file,-@params)">template</a></li>
    <li><a href="https://metacpan.org/pod/Rex::Commands::Gather#get_operating_system">get_operating_system</a></li>
    <li><a href="https://metacpan.org/pod/Rex::Commands#case">case</a></li>
    <li><a href="https://metacpan.org/pod/Rex::Commands#parallelism($count)">paralellism</a></li>
    <li><a href="https://metacpan.org/pod/Rex::Commands::Pkg#installed_packages">install_packages</a></li>
    <li><a href="https://metacpan.org/pod/local::lib">local::lib</a></li>
    <li><a href="https://gist.github.com/krimdomu/335d01fc0f1e28f2bb7929eaf552eb93">reboot_and_wait.rex.pl</a></li>
    <li><a href="https://gist.github.com/krimdomu/46efdc68b4067e9b792c">patch system and reboot gist (long)</a></li>
</ul>

<h2>Tasks</h2>
<ul>
   <li>Switch to latest Rex from CPAN.</li>
   <li>Create droplets using Fedora, Debian, CentOS, and FreeBSD as well in different regions. (Done manually during the meeting.)</li>
   <li>Deploy the Web server with our page on each one of them. (Managed to do it partially)</li>
   <li>Introduction to templates - Change the html page so on each distribution it will say "Welcome to DISTRIBUTION by Rex"</li>
   <li>We discussed a way to version control exactly what we are running? (So list inventory and only allow to run on the macnies in the inventory. host groups?)</li>
</ul>

Added the following to <b>~/.bashrc</b>, disconnected and logged in again.

<code>
eval "$(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)"
</code>


<h2>Bash history</h2>

<include file="examples/rex/round2/history.txt">

<h2>Rexfile</h2>

<include file="examples/rex/round2/Rexfile">

<h2>HTML Template</h2>

<include file="examples/rex/round2/files/main.html">

<h2>Nginx config file</h2>

<include file="examples/rex/round2/files/ubu-1.conf">

<h2>.ssh/config file</h2>

<include file="examples/rex/round2/config">

<!--
Before the meeting create a script that will set up the environment as we had it when we finished the first session.
<ul>
   <li>Create a pair of private/public keys that will be used in these examples. Upload the public key to Digital Ocean</li>
   <li>If not too difficult write a script that will create a new Droplet with my own personal public key. This is going to be the management host.</li>
   <li>Also create 2 machines using the Rex public key called ubu-1 and ubu-2</li>
   <li>On the management server: Install Rex using apt-get, copy the .ssh/config file and copy the files we created in the <a href="/automation-with-rex">previous session</a></li>
   <li>Copy the private ssh key to ~/.ssh/</li>
   <li>Run the Rex code on the management server to set up the web server on ubu-1</li>
</ul>

<ul>
   <li>Switch to latest Rex from CPAN (perhaps even inside a perlbrew environment?)</li>
   <li>Create droplets using Fedora, Debian, CentOS, and FreeBSD as well in different regions.</li>
   <li>Deploy the Web server with our page on each one of them.</li>
   <li>Introduction to templates - Change the html page so on each distribution it will say "Welcome to DISTRIBUTION by Rex"</li>
   <li>Do we have a way to version control exactly what we are running? (So list inventory and only allow to run on the macnies in the inventory. host groups?)</li>
   <li>Mention the idea of separating code and data (e.g. via CMDB, config files, APIs, etc.)</li>
   <li>Maybe convert the nginx logic from Rexfile into a module (e.g. Rex::CodeMaven::Nginx)</li>
   <li>add a cert to nginx (e.g. via Let's Encrypt)</li>
   <li>Enable basic auth in nginx</li>
</ul>

-->
