=title Pretty print JSON with beautifier: How to make a JSON readable
=timestamp 2018-09-18T17:30:01
=indexes JSON, Perl, Python, Ruby
=status show
=author szabgab
=archive 1
=comments_disqus_enable 0

=abstract start

<a href="https://stedolan.github.io/jq/">jq</a> is the swiss army knife for dealing with JSON files. If you can install it use that.

However I often find myself in situations where, for whatever technical, legal, or just plain stupid reason I cannot install it.

If you find yourself in similar situation, here are a few tools that might help you.

=abstract end

<h2>What is JSON</h2>

Read a bit about <a href="/json">JSON</a>.

<h2>Input</h2>

Just a random JSON file:

<include file="examples/data/in.json">

<h2>Expected Output</h2>

<include file="examples/data/out.json">

<h2>How to use these?</h2>

Save the code in a file. Make the file executable:

<code>
chmod +x filename
</code>

Run the file and redirect the JSON string into its Standard Input (STDIN).
If the JSON is in a file called "in.json":

<code>
./filename < in.json
</code>

If it is received from an API then:

<code>
curl http://... | ./filename
</code>


<h2>Perl 5</h2>

If you have Perl 5 installed you might use the following code:

<include file="examples/jq.pl">

You could also use one of the other <a href="https://perlmaven.com/json">JSON implementations</a> in Perl
and you can also read my <a href="https://perlmaven.com/">Perl Tutorial</a>.

<h2>Rakudo Perl 6</h2>

If you have <a href="http://rakudo.org/">Rakudo</a> <a href="https://perl6.org/">Perl 6</a> installed you might use the following code:

<include file="examples/perl6/jq.pl6">

and then you can read more on the <a href="http://perl6maven.com/">Perl 6 Maven</a> site.

<h2>Python</h2>

<include file="examples/python/jq.py">

Please remember NOT to call this file json.py as that will not work.

An alternative Python one-liner suggested by <a href="https://www.linkedin.com/in/caleb-clark-0529ab2/">Caleb Clark</a> looks like this:

<code>
python -m json.tool in.json
</code>

<code>
curl ... | python -m json.tool
</code>


<h2>Ruby</h2>

It is less likely that you have Ruby installed, but in any case here is the example in Ruby:

<include file="examples/ruby/jq.rb">


