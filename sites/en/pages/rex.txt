=title Rex - (R)?ex - Rexify
=timestamp 2021-03-23T09:30:01
=indexes Rex
=description Rex (aka Rexify) is a framework allowing you to automate the configuration and maintenance of many servers
=status show
=author szabgab
=archive 1
=comments_disqus_enable 0
=show_related 1

=abstract start

<a href="https://www.rexify.org/">Rex (aka Rexify)</a> is a framework allowing you to automate the configuration and maintenance of many servers.

=abstract end

<ul>
   <li><a href="/automation-with-rex">Learn automation using (R)?ex</a></li>
   <li><a href="/rex-multiple-oses">Multiple OS-es using (R)?ex</a></li>
   <li><a href="/rex-automation-3">Rex Automation part 3</a></li>
   <li><a href="/elk-with-rex">Setting up ELK using (R)?ex</a></li>
</ul>

<!--
   <li><a href=""></a></li>
-->

<h2>Further Plans</h2>
<ul>
   <li>Mention the idea of separating code and data (e.g. via CMDB, config files, APIs, etc.)</li>
   <li>Maybe convert the nginx logic from Rexfile into a module (e.g. Rex::CodeMaven::Nginx)</li>
   <li>add a cert to nginx (e.g. via Let's Encrypt)</li>
   <li>Enable basic auth in nginx</li>
   <li>Write a script that will create a new Droplet with my own personal public key. This is going to be the management host.</li>
</ul>


<h2>Getting started with Rex</h2>

<ul>
    <li><a href="">Install Rex</a></li>
    <li>Set up a remote host. e.g. Create a Droplet on <a href="https://www.digitalocean.com/?refcode=0d4cc75b3a74">Digital Ocean</a></li>
    <li>Make sure you can ssh to the host without providing a password.</li>
    <li>Run your first command using Rex: (after replacing USER by the remote username and REMOTE_HOST by the IP or dns name of the remote host.)</li>
</ul>

<code>
rex -u USER -H REMOTE_HOST -e 'say run(q{hostname})'
</code>

<h2>Get remote hostname using Rexify</h2>

<code>
rex -u USER -H REMOTE_HOST -e 'say run(q{hostname})'
</code>

The output will look like this:

<code>
[2021-03-23 19:11:22] INFO - Running task eval-line on REMOTE_HOST
HOSTNAME
[2021-03-23 19:11:28] INFO - All tasks successful on all hosts
</code>

<h2>List directory on remote host using Rexify</h2>

<code>
rex -u USER -H REMOTE_HOST -e 'say for run(q{ls -l})'
rex -u USER -H REMOTE_HOST -e 'say scalar run(q{ls -l})'
</code>

<h2>Create a Rexfile</h2>

<include file="examples/rex/minimal/Rexfile">

This is still useless, but we already have a Rexfile that declares its featureset.

<h2>Rexfile with simple task showing remote hostname</h2>

<include file="examples/rex/hostname/Rexfile">

<b>cd</b> into the directory of this file.

Then type in

<code>
rex -T
</code>

it will print out the list of available tasks in the Rexfile.

<code>
Tasks
 print_hostname  Just printing hostname
</code>

The output will look like this: (you need to replace USER and REMOTE_HOST and it will show something else instead of HOSTNAME

<code>
$ rex -u USER -H REMOTE_HOST print_hostname
[2021-03-25 13:21:48] INFO - Running task print_hostname on REMOTE_HOST
HOSTNAME
[2021-03-25 13:21:54] INFO - All tasks successful on all hosts
</code>

<h2>Rexify update list of packages</h2>

<b>apt-get update using Rexify</b>

<include file="examples/rex/update/Rexfile">

<h2>Rexify install Nginx</h2>

<include file="examples/rex/setup-nginx/Rexfile">

You might first need to update the list of packages.



