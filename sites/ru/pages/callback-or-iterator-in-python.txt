=title Функция обратного вызова (callback) или итератор в Python
=timestamp 2016-03-19T08:56:01
=indexes for
=status show
=books python
=author szabgab
=original callback-or-iterator-in-python
=translator name2rnd
=archive 1
=comments_disqus_enable 0

=abstract start

Раньше мы видели, как <a href="/function-or-callback-in-python">функции обратного вызова (колбеки) могут быть лучше простых функций</a>,
но есть и другие варианты. Мы можем создать, вероятно, неограниченный итератор, который будет
обходить элементы нашей последовательности, делая код еще более понятным, чем даже решение с колбеками.

=abstract end

<h2>Решение с колбеком</h2>

Просто для напоминания - вот наше решение с колбеком. У нас есть функция fibonacci, которая проходит элементы последовательности, 
и для каждого элемента вызывает переданную функцию <hl>check_17</hl>.

<include file="examples/python/fibonacci_function_callback.py">

Тот факт, что мы должны иметь возможность передать функции <hl>fibonacci</hl>
сигнал, когда остановиться, делает наш код несколько сложнее, чем мы надеялись.
Мы должны возвращать массив, в котором первый элемент выполняет роль индикатора (True/False).

<h2>Создание Fibonacci-итератора</h2>

Давайте сделаем все наоборот и позволим пользователю вернуть контроль над циклом. 
Мы создаем класс <hl>Fibonacci</hl>, который будет итерабельным вследствие добавления
метода <hl>__iter__</hl>, который просто возвращает объект,
и метода <hl>next</hl> (В Python 3, думаю, это будет <hl>__next__</hl>),
который возвращает следующий элемент.

Внутри объект содержит текущее состояние итерации. В нашем случае это значит,
что он должен содержать последние два элемента последовательности.

<include file="examples/python/fibonacci_iterator.py">

Вызов <hl>fib = Fibonacci()</hl> создаст объект итератора, который мы можем использовать 
в конструкции <hl>for in</hl> для перебора элементов.
Поскольку это неограниченный итератор, то есть, он не имеет конца,
мы должны быть уверены, что есть какой-то код внутри цикла <hl>for</hl>,
который его как-то остановит.

Решение выглядит проще, чем вариант <a href="/function-or-callback-in-python">с колбеками</a>.
