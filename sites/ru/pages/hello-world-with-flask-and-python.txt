=title Hello World с Flask и Python
=timestamp 2015-05-16T09:33:01
=indexes Flask
=status show
=books python, flask
=author szabgab
=original hello-world-with-flask-and-python
=translator name2rnd
=archive 1
=comments_disqus_enable 0

=abstract start

<a href="http://flask.pocoo.org/">Flask</a> это микрофреймворк для Python, основанный на 
<a href="http://werkzeug.pocoo.org/">Werkzeug</a>, <a href="http://jinja.pocoo.org/">Jinja 2</a> и хороших намерениях.

В этой статье мы рассмотрим пример "Hello World" на Flask, который описан на главной странице сайта этого фреймворка.

=abstract end

<include file="examples/flask/hello_world.py">

После установки Flask с помощью <hl>pip install Flask</hl> я могу запустить приведенный выше скрипт через командную строку:

<code>
$ python examples/flask/hello_world.py 
</code>

И увижу такой ответ:

<code>
* Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
</code>

Затем я открыл браузер по указанному адресу и там действительно отображался "Hello World!", тем временем в консоли я увидел:

<code>
127.0.0.1 - - [03/Feb/2015 09:43:14] "GET / HTTP/1.1" 200 -
127.0.0.1 - - [03/Feb/2015 09:43:14] "GET /favicon.ico HTTP/1.1" 404 -
</code>

Первая запись это мой запрос, вторая запись относится к браузеру, попытавшемуся загрузить иконку сайта.
В конце первой строки приведен <a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes">HTTP-статус 200</a>,
который указывает на успешное выполнение запроса, вторая строка заканчивается HTTP-статусом 404, обозначающим "Not found".

Код приложения выглядит достаточно очевидным.

Мы объявили функцию с произвольным именем (<hl>hello</hl>), и использовали декоратор <hl>@app.route("/")</hl>, чтобы связать
запрос на <hl>/</hl> с этой функцией.

<code lang="python">
@app.route("/")
def hello():
    return "Hello World!"
</code>

Когда Flask запущен, он принимает HTTP-запросы, а затем перенаправляет их на функции, основываясь на пути, указанном в запросе.
Таким образом код выше означает - если запрос приходит на <hl>/</hl>, тогда запустить функцию <hl>hello</hl>.

И в конце скрипта мы видим следующее:

<code lang="python">
if __name__ == "__main__":
    app.run()
</code>

Код <hl>app.run()</hl> запускает веб-сервер с приложением, основанным на Flask.
Код <hl>if __name__ == "__main__":</hl> позволяет запустить веб-сервер только в случае, если этот код запускается как скрипт.

Это позволит нам использовать повторно код из этого файла как часть другого веб-приложения на Flask.

(В Perl такое поведение называют <a href="http://www.masteringperl.org/category/chapters/modulinos/">Modulino</a>.)



