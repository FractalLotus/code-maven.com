=title Условный оператор в Ruby
=timestamp 2016-03-27T18:35:23
=indexes ?:
=status show
=books ruby
=author szabgab
=original conditional-operator-in-ruby
=translator name2rnd
=comments_disqus_enable 0

=abstract start

Официальное название оператора <hl>? :</hl> это <a href="https://ru.wikipedia.org/wiki/%D0%A2%D0%B5%D1%80%D0%BD%D0%B0%D1%80%D0%BD%D0%B0%D1%8F_%D1%83%D1%81%D0%BB%D0%BE%D0%B2%D0%BD%D0%B0%D1%8F_%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D1%8F">условный оператор</a>,
хотя большинство людей знают его как <b>тернарный оператор</b>, указывая на количество его операндов.

=abstract end

Есть несколько <b>унарных операторов</b> (unary), которые работают с одним операндом. Например <hl>-</hl> может быть унарным оператором.

Большинство операторов бинарные (binary) и работают с двумя операндами. Например <hl>*</hl> всегда требует два операнда для работы,
но в большинстве случаев <hl>-</hl> также работает как бинарный.

Есть всего один <b>тернарный оператор</b>, который имеет 3 операнда. Он называется <b>условный оператор</b>, но так как есть всего один такой,
большинство людей называют его <b>тернарный оператор</b>.

<h2>Условный оператор в Ruby</h2>

В целом это выглядит так:

<code>
CONDITION ? EVALUATE_IF_CONDITION_WAS_TRUE : EVALUATE_IF_CONDITION_WAS_FALSE
</code>

Выражение проверяет <hl>CONDITION</hl> (условие). Если оно <hl>true</hl>(истина), тогда работает код между <hl>?</hl> и <hl>:</hl>, и возвращается результат.
Если <hl>CONDITION</hl> (условие) ложно, тогда средняя часть пропускается и выполняется 3я часть, возвращая результат.

<h2>Пример с puts</h2>

В этом примере возвращаемое значение условного оператора передается в <hl>puts</hl>

<code>
filename = ARGV.shift
puts filename ? filename : 'No file given'
</code>

<h2>Пример с меньшим значением</h2>

В этом примере мы проверяем, какое из двух случайных значений меньше, и возвращаем его:

<include file="examples/ruby/smaller_ternary.rb">

