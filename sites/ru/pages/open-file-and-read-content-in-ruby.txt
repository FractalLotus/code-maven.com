=title Открываем файл и читаем содержимое в Ruby
=timestamp 2016-02-27T21:07:01
=indexes open, File, read, readline, gets, while, each
=status show
=books ruby
=author szabgab
=original open-file-and-read-content-in-ruby
=translator name2rnd
=archive 1
=comments_disqus_enable 0

=abstract start

Чтение файла это одна из наиболее важных задач в любом языке программирования. В Ruby это сделать очень просто.

=abstract end

<include file="examples/ruby/read_file.rb">

<code>
ruby read_file.rb  some/file.txt
</code>

Программа ожидает от нас передачи имени файла в командной строки и затем использует <a href="/argv-the-command-line-arguments-in-ruby">ARGV</a>
для доступа к значениям. Вообще-то, сначала мы проверяем, передал ли пользователь нужное количество аргументов, и прерываем работу, если это не так.

Затем мы используем вызов <hl>open</hl> для открытия файла на чтение. Этот вызов вернем нам объект класса <a href="http://ruby-doc.org/core/File.html">File</a>.

(Если мы выведем содержимое <hl>fh</hl>, то получим что-то вроде <hl>#&lt;File:0x007f8c0310f748&gt;</hl>)

Метод <hl>read</hl> этого класса прочитает все содержимое файла, которое мы сохраняем в переменную <hl>content</hl>.
Это полное содержимое файла, включая переводы строк.

По сути это тоже самое, что и <a href="https://perlmaven.com/slurp">slurp в Perl</a>

<h2>Читаем файл построчно</h2>

Чтение всего файла одним оператором выглядит простым, но не всегда хорошая идея.
Например, если у вас файл лога размером в 10 Gb, то вероятно, вам не захочется считать его весь в память.
Всегда ли у вас есть 10 Gb свободной памяти?

В таком случае, будет лучше читать файл построчно. После чтения строки, делайте с этой строкой что вам нужно, а затем заменяйте на новую строку.
Таким образом, в каждый момент времени в памяти мы держим только одну строку. Намного эффективнее.

Есть два способа реализовать это, и я не уверен, есть ли какие-то преимущества или недостатки в каждом их них.

Первый - с помощью <hl>gets</hl> и <hl>while</hl>. Выглядит будто это написал кто-то из мира Perl 5:

<include file="examples/ruby/read_file_by_line_while.rb">

Другой способ - с помощью <hl>each</hl>. Выглядит более Rubyish:

<include file="examples/ruby/read_file_by_line_each.rb"> 

