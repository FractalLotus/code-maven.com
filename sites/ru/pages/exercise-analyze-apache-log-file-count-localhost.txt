=title Упражнение: Анализ лог-файла Apache - считаем localhost
=timestamp 2016-02-27T20:33:01
=indexes exercises, projects
=status show
=books ruby, python, javascript, php
=author szabgab
=original exercise-analyze-apache-log-file-count-localhost
=translator name2rnd
=archive 1
=comments_disqus_enable 0

=abstract start

В этом <a href="/exercises">упражнении</a> мы берем файл лога, сгенерированный веб-сервером, и проводим простой анализ.

=abstract end

Файл выглядит вот так:

<include file="examples/data/apache_access.log">

Каждая строка это запрос к веб-серверу. Что-то это страницы, что-то - изображения, что-то - файлы JavaScript.
Это сейчас не так важно. Сейчас мы собираемся сфокусироваться на первом элементе каждой строки, где указан IP-адрес хоста, откуда пришел запрос.
Делаем это с помощью простого упражнения.

Как вы, вероятно, знаете, каждое устройство использует IP-адрес 127.0.0.1 для ссылок на самого себя. Таким образом, запросы с этим 
IP-адресом пришли с этой же самой машины.

Задача написать скрипт, который посчитает запросы, пришедшие с 127.0.0.1 и остальные.

<h2>Инструменты</h2>
<ul>
  <li><a href="https://perlmaven.com/beginner-perl-maven-open-file">Perl 5: open the file for reading or die</a></li>
  <li><a href="https://perlmaven.com/chomp">Perl 5: chomp remove trailing newlines</a></li>
  <li><a href="https://perlmaven.com/beginner-perl-maven-string-functions-index">Perl 5: index</a></li>
  <li><a href="https://perlmaven.com/beginner-perl-maven-substr">Perl 5: substr</a></li>
  <li><a href="/argv-the-command-line-arguments-in-ruby">Ruby: параметры командной строки ARGV</a>.</li>
  <li><a href="/open-file-and-read-content-in-ruby">Ruby: открытие файла на чтение и работа с ним</a>.</li>
</ul>

<h2>Решения</h2>
<ul>
   <li><a href="https://perlmaven.com/beginner-perl-maven-analyze-apache-log-file">Perl 5 - Analyze Apache log file - count localhost</a></li>
   <li><a href="/analyze-apache-log-file-count-localhost-in-ruby">Ruby - Анализ лог-файла Apache - считаем localhost</a></li>
</ul>

